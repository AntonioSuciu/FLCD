N = { program cmpdstmt IDdecl type ARRdecl declaration forstmt forcondition whilestmt simpleifstmt ifelsestmt ifstmt condition relation E A B C D assignstmt iostmt stmtlist simplestmt structstmt}
Sigma = { MAIN DECLARE IDENTIFIER ARRAY [ ] INTEGER CHAR FLOAT FOR IN : ( ) WHILE IF ELSE + - * / < > ! = { } READ WRITE epsilon }
S = program
P = {
program -> MAIN cmpdstmt
IDdecl -> DECLARE IDENTIFIER type
ARRdecl -> DECLARE arrray ARRAY [ type ]
type -> INTEGER | CHAR | FLOAT
declaration -> IDdecl | ARRdecl
forstmt -> FOR IDENTIFIER IN forcondition cmpdstmt
forcondition -> ( expression : expression )
whilestmt -> WHILE condition cmpdstmt
simpleifstmt -> IF condition CMPDSTMT
ifelsestmt -> epsilon | ELSE cmpdstmt
ifstmt -> simpleifstmt | ifelsestmt
condition -> ( expression relation expression )
E -> BA
A -> +BA
A -> epsilon
B -> DC
C -> *DC
C -> epsilon
D -> (S)
D -> IDENTIFIER
term -> term * factor | term / factor | factor
factor -> ( expression ) | IDENTIFIER | integer | float
relation -> < | <= | == | >= | > | !=
assignstmt -> IDENTIFIER = expression
iostmt -> READ ( IDENTIFIER ) | WRITE ( IDENTIFIER )
cmpdstmt -> { stmtlist }
stmtlist -> simplestmt | structstmt
simplestmt -> declaration | assignstmt | iostmt
structstmt -> cmpdstmt | ifstmt | forstmt | whilestmt
}