N = { program cmpdstmt IDdecl type ARRdecl declaration forstmt forcondition whilestmt simpleifstmt ifelsestmt ifstmt condition relation expression assignstmt iostmt stmtlist startstmt structstmt }
Sigma = { MAIN DECLARE IDENTIFIER ARRAY [ ] INTEGER CHAR FLOAT FOR IN : ( ) WHILE IF ELSE + - * / < > ! = { } READ WRITE epsilon }
S = program
P = {
program -> MAIN cmpdstmt
IDdecl -> DECLARE IDENTIFIER type
ARRdecl -> DECLARE arrray ARRAY [ type ]
type -> INTEGER | CHAR | FLOAT
declaration -> IDdecl | ARRdecl | epsilon
forstmt -> FOR IDENTIFIER IN forcondition cmpdstmt
forcondition -> ( expression : expression )
whilestmt -> WHILE condition cmpdstmt
simpleifstmt -> IF condition cmpdstmt
ifelsestmt -> epsilon | ELSE cmpdstmt
ifstmt -> simpleifstmt ifelsestmt
condition -> expression relation expression
expression -> term | expression + term | expression - term
term -> factor | term * factor | term / factor
factor -> IDENTIFIER | integer | float | ( expression )
relation -> < | <= | == | >= | > | !=
assignstmt -> IDENTIFIER = expression
iostmt -> READ ( IDENTIFIER ) | WRITE ( IDENTIFIER )
cmpdstmt -> { stmtlist }
stmtlist -> startstmt stmtlist | epsilon
startstmt -> declaration | structstmt
simplestmt -> declaration | assignstmt | iostmt
structstmt -> cmpdstmt | ifstmt | forstmt | whilestmt
}